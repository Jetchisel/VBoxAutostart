#!/bin/bash

# ============================================================================================ #
#: Title           : systemd-vboxinit                                                          #
#: Sypnosis        : systemd-vboxinit [OPTIONS]                                                #
#: Date Created    : Wed Oct  2 07:57:25 PHT 2013                                              #
#: Last Edit       : Wed Feb 19 12:08:27 PHT 2014 / Wed Feb 19 04:08:27 UTC 2014               #
#: License         : GPLv3                                                                     #
#: Version         : 1.5                                                                       #
#: Author          : Jason V. Ferrer '<jetchisel@opensuse.org>'                                #
#: Description     : Auto start sessions when booting and save sessions when host is stopped.  #
#: Options         : {stop|start|license|help} / Short and long options are supported too.     #
#: Home Page       : https://github.com/Jetchisel/VBoxAutostart                                #
# ============================================================================================ #

# ******************************************************************************************** #
#                                                                                              #
#              Set the shell option so Uuids can be tested in one line.                        #
#                                                                                              #
# ******************************************************************************************** #

shopt -s extglob

# ******************************************************************************************** #
#                                                                                              #
#              Check if VirtualBox is installed if not exit with an error.                     #
#                                                                                              #
# ******************************************************************************************** #

if ! type -P VirtualBox >/dev/null; then
  if ! type -P virtualbox >/dev/null; then
    if [[ ! -f /usr/lib/virtualbox/VirtualBox ]]; then
      echo "VirtualBox is either not installed or it's not in your PATH!" >&2
      exit 127
    fi
  fi
fi

# ******************************************************************************************** #
#                                                                                              #
#  Use the VBoxManage in /usr/lib/virtualbox if it exist, else use whatever is in your PATH.   #
#                                                                                              #
# ******************************************************************************************** #

VBoxManage() { 
  if [[ -f /usr/lib/virtualbox/VBoxManage && -x /usr/lib/virtualbox/VBoxManage ]]; then
      /usr/lib/virtualbox/VBoxManage "$@"
  else
    if type -P VBoxManage >/dev/null; then
       command -p VBoxManage "$@"
    else
       command -p vboxmanage "$@"
    fi
  fi
}

# ******************************************************************************************** #
#                                                                                              #
#                                  VBoxManage Functions.                                       #
#                                                                                              #
# ******************************************************************************************** #

ExtraData() {
  VBoxManage getextradata "$uuid" 'pvbx/startupMode'
}

ListRunningVms() {
  VBoxManage list runningvms
}

ListVms() {
  VBoxManage list vms
}

StartVms() {
  VBoxManage startvm "$uuid" --type headless
}

SaveVms() {
  VBoxManage controlvm "$uuid" savestate
}

# ******************************************************************************************** #
#                                                                                              #
#     Put the running vms uuids in an array and in the variable "Uuids" using 'printf -v'.     #
#                                                                                              #
# ******************************************************************************************** #

uuids=()
while read -u7 -r vm; do
  uuid=${vm##*"{"} 
  uuids+=("${uuid%"}"*}")
done 7< <(ListRunningVms)

printf -v Uuids "%s|" "@(${uuids[@]})"
Uuids=${Uuids%%|}

# ******************************************************************************************** #
#                                                                                              #
#    Save the Value of uuid and VmName variable in a Function to avoid repeating it twice.     # 
#                                                                                              #
# ******************************************************************************************** #

Value() {
  uuid=${line##*"{"}
  uuid=${uuid%"}"*}
  VmName=${line#*\"}
  VmName=${VmName%%\"*}
}

# ******************************************************************************************** #
#                                                                                              #
#                             Function to start the vms Headless.                              # 
#                                                                                              #
# ******************************************************************************************** #

start() {
  while read -u8 -r line; do 
    Value
    if [[ $(ExtraData) = *auto* ]]; then
      if [[ $uuid != $Uuids ]]; then
        printf '\n%s\n' "Starting Machine '$VmName'..."
        StartVms
      else 
        printf '\n%s\n' "Machine '$VmName' is already running..."
      fi
    elif [[ $(ExtraData) != *auto* ]]; then
      printf '\n%s\n' "Machine '$VmName' is not set to auto...."
      echo
    fi 
  done 8< <(ListVms) 
}

# ******************************************************************************************** #
#                                                                                              #
#                Function to save vms state instead of shutting down completely.               #
#                                                                                              #
# ******************************************************************************************** #

stop() {
   while read -u9 -r line; do 
     Value
     if [[ $uuid = $Uuids ]]; then
       printf '\n%s\n' "Saving machine '$VmName' state..."
       SaveVms
       echo
     fi
   done 9< <(ListVms)
}

# ******************************************************************************************** #
#                                                                                              #
#                                       Usage Function.                                        #
#                                                                                              #
# ******************************************************************************************** #

help() {
   cat <<EOF

Usage: ${BASH_SOURCE##*/} [OPTIONS] 

Options:
  --start, -start, start        Start enabled virtual machines otherwise show the state.
  --stop,  -stop,  stop         Stop running virtual machines.
  --help,  -help,  help         Show this help.
  --license, -license, license  Show license.  

EOF
return
}

# ******************************************************************************************** #
#                                                                                              #
#                License function (required by GPL, see the LICENSE file)                      #
#                                                                                              #
# ******************************************************************************************** #

license() { 
    cat <<EOF
    
                     Systemd-vboxinit 

Copyright (C) 2013  Jason V. Ferrer  '<jetchisel@opensuse.org>'

Auto start sessions when booting and save sessions when host is 
stopped using systemd as its start up daemon.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
version 3 as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
(see The LICENSE file) along with this program; if not, write
to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
Floor, Boston, MA  02110-1301, USA.

EOF
return
}

# ******************************************************************************************** #
#                                                                                              #
#                            Check for a command line options.                                 #
#                                                                                              #
# ******************************************************************************************** #

if (( $# > 1 )); then
  printf '\n%s\n\n' "Too many arguments, try --help"
  exit 1
else
  case $1 in
    --stop|-stop|stop) stop;;
    --start|-start|start) start;;
    --license|-license|license) license;;
    --help|help) help 
                 exit 0;;
    *) help >&2
       exit 1 ;;
  esac
fi

# ******************************************************************************************** #
#                                                                                              #
#                                     Set the exit staus.                                      #
#                                                                                              #
# ******************************************************************************************** #

exit 0

# ============================================================================================ #
#                                                                                              #
#                                    >>> END OF SCRIPT <<<                                     #
#                                                                                              #
# ============================================================================================ #
